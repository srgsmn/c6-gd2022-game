//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""CharacterControls"",
            ""id"": ""3576d17e-dbc6-46a8-9b23-67913631a04f"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""38fa923a-734e-427b-b85e-273754f156ab"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""d972d7c7-d411-4b5a-9054-f773afd90abf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""082e6111-64e1-4cf0-ab01-a66bf5760730"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""335444ff-0dd2-4147-93d3-943e263619a3"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""35e3f4eb-33a3-46a3-8304-f7ae459bfcb8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""68e4145a-04d7-488b-8cbf-2d507f7c6a1b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""adb83173-f03a-4d3b-acc8-d471545a1502"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9758c998-8ec1-4218-bdb2-f6c2848be6b8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e5e82256-c128-47bb-ae13-0a764a037892"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""f230f3b6-12bf-430f-98ad-cb41792dc31f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7ede8a35-327b-4a12-87f4-daecc47fc469"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""404ad5a4-5d13-47ce-b49e-385740721f45"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3b295fad-0ca0-4ab9-9493-fbad1e91f195"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""97cbfdb3-a5f9-4ab2-a32d-3bf4973cf965"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""715046ac-17e6-469c-af5c-2828c5a74fb4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""381429bf-0648-4dbc-8ecc-2e91c2fed515"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f37c40fd-9a93-4f06-a894-783d1a2ee1e0"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a1363c9-2f74-4a30-906b-de8636dc9299"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Debug"",
            ""id"": ""5468c908-f872-4fc3-ba87-5ad6be08147e"",
            ""actions"": [
                {
                    ""name"": ""IsDebug"",
                    ""type"": ""Button"",
                    ""id"": ""84490dd3-6c1e-495a-96f2-1682a39d95cc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Health"",
                    ""type"": ""Button"",
                    ""id"": ""f9c08b53-8075-41fa-8385-fa43dc804864"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Armor"",
                    ""type"": ""Button"",
                    ""id"": ""82a2f804-7d61-4baf-8dad-36079e96e599"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SL"",
                    ""type"": ""Button"",
                    ""id"": ""14c68bf7-6efb-4f72-aa4d-dfb05fddaf87"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CC"",
                    ""type"": ""Button"",
                    ""id"": ""eb626ef3-6944-40dc-970a-f95fd86ad40f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inc"",
                    ""type"": ""Button"",
                    ""id"": ""6b9ffa5b-b119-4a3a-856d-4c80ffa42040"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dec"",
                    ""type"": ""Button"",
                    ""id"": ""652801c1-96ca-411e-9ce0-73853f90ef84"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Max"",
                    ""type"": ""Button"",
                    ""id"": ""69f43bd3-cda3-42b6-8906-fc8f76a07d9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reset"",
                    ""type"": ""Button"",
                    ""id"": ""03eaae9e-8c46-4ce7-ab81-10c305b93853"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugSwitcher"",
                    ""type"": ""Button"",
                    ""id"": ""1d632d06-b2c9-437d-beca-19c4277a1778"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Save"",
                    ""type"": ""Button"",
                    ""id"": ""0248d690-e29e-4188-b25a-e28d91d14b43"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Load"",
                    ""type"": ""Button"",
                    ""id"": ""7ead51e0-9c82-4d0d-b512-186767bc53bc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quit"",
                    ""type"": ""Button"",
                    ""id"": ""c0f1f392-f7ed-4c4d-b95f-4b17e6e6d808"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8110165a-ee60-4b55-94da-3fd25357fdc2"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IsDebug"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""449da373-15a8-489c-a748-d1b12331607f"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Health"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d20b1982-c2e7-433d-abef-df17654a1f23"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Armor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9acf9fd2-3467-4083-84fc-7dabdb8b5c5d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0ddbc248-40b7-456c-8ee2-bde76adb5394"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef1d6fbb-ab6c-4477-87bf-a70feb29fc0b"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""621bf139-16db-4d98-a2aa-5451e1a01da2"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dec"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1ae2617-d98f-4bd4-a05b-84122b90f92a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Max"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3d3ec27-69af-4327-911b-e19c5c340c4c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0cf486eb-38ae-4d8e-bde2-7ef82f584cf6"",
                    ""path"": ""<Keyboard>/period"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugSwitcher"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77504081-f4a0-448e-83ce-4955e27d8587"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Save"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17c24985-4d8c-4e28-8b17-2462100e3f4a"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Load"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f40d7b58-978b-4cce-8e87-434df7eb5ec3"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""1569d222-5b8e-45e0-b8c6-924ee5d6b995"",
            ""actions"": [
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""7689203d-34aa-4f88-b161-0ccc4c1367f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Close"",
                    ""type"": ""Button"",
                    ""id"": ""79f730bc-ff8f-4c25-ae34-68cfd15faa31"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""55e14d1a-c5e6-4378-bf7c-240c2a36c3e0"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3126c97b-5582-4870-9f18-8f8941b461f1"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CharacterControls
        m_CharacterControls = asset.FindActionMap("CharacterControls", throwIfNotFound: true);
        m_CharacterControls_Move = m_CharacterControls.FindAction("Move", throwIfNotFound: true);
        m_CharacterControls_Jump = m_CharacterControls.FindAction("Jump", throwIfNotFound: true);
        m_CharacterControls_Run = m_CharacterControls.FindAction("Run", throwIfNotFound: true);
        // Debug
        m_Debug = asset.FindActionMap("Debug", throwIfNotFound: true);
        m_Debug_IsDebug = m_Debug.FindAction("IsDebug", throwIfNotFound: true);
        m_Debug_Health = m_Debug.FindAction("Health", throwIfNotFound: true);
        m_Debug_Armor = m_Debug.FindAction("Armor", throwIfNotFound: true);
        m_Debug_SL = m_Debug.FindAction("SL", throwIfNotFound: true);
        m_Debug_CC = m_Debug.FindAction("CC", throwIfNotFound: true);
        m_Debug_Inc = m_Debug.FindAction("Inc", throwIfNotFound: true);
        m_Debug_Dec = m_Debug.FindAction("Dec", throwIfNotFound: true);
        m_Debug_Max = m_Debug.FindAction("Max", throwIfNotFound: true);
        m_Debug_Reset = m_Debug.FindAction("Reset", throwIfNotFound: true);
        m_Debug_DebugSwitcher = m_Debug.FindAction("DebugSwitcher", throwIfNotFound: true);
        m_Debug_Save = m_Debug.FindAction("Save", throwIfNotFound: true);
        m_Debug_Load = m_Debug.FindAction("Load", throwIfNotFound: true);
        m_Debug_Quit = m_Debug.FindAction("Quit", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Back = m_UI.FindAction("Back", throwIfNotFound: true);
        m_UI_Close = m_UI.FindAction("Close", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CharacterControls
    private readonly InputActionMap m_CharacterControls;
    private ICharacterControlsActions m_CharacterControlsActionsCallbackInterface;
    private readonly InputAction m_CharacterControls_Move;
    private readonly InputAction m_CharacterControls_Jump;
    private readonly InputAction m_CharacterControls_Run;
    public struct CharacterControlsActions
    {
        private @PlayerInput m_Wrapper;
        public CharacterControlsActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_CharacterControls_Move;
        public InputAction @Jump => m_Wrapper.m_CharacterControls_Jump;
        public InputAction @Run => m_Wrapper.m_CharacterControls_Run;
        public InputActionMap Get() { return m_Wrapper.m_CharacterControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterControlsActions set) { return set.Get(); }
        public void SetCallbacks(ICharacterControlsActions instance)
        {
            if (m_Wrapper.m_CharacterControlsActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMove;
                @Jump.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJump;
                @Run.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnRun;
            }
            m_Wrapper.m_CharacterControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
            }
        }
    }
    public CharacterControlsActions @CharacterControls => new CharacterControlsActions(this);

    // Debug
    private readonly InputActionMap m_Debug;
    private IDebugActions m_DebugActionsCallbackInterface;
    private readonly InputAction m_Debug_IsDebug;
    private readonly InputAction m_Debug_Health;
    private readonly InputAction m_Debug_Armor;
    private readonly InputAction m_Debug_SL;
    private readonly InputAction m_Debug_CC;
    private readonly InputAction m_Debug_Inc;
    private readonly InputAction m_Debug_Dec;
    private readonly InputAction m_Debug_Max;
    private readonly InputAction m_Debug_Reset;
    private readonly InputAction m_Debug_DebugSwitcher;
    private readonly InputAction m_Debug_Save;
    private readonly InputAction m_Debug_Load;
    private readonly InputAction m_Debug_Quit;
    public struct DebugActions
    {
        private @PlayerInput m_Wrapper;
        public DebugActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @IsDebug => m_Wrapper.m_Debug_IsDebug;
        public InputAction @Health => m_Wrapper.m_Debug_Health;
        public InputAction @Armor => m_Wrapper.m_Debug_Armor;
        public InputAction @SL => m_Wrapper.m_Debug_SL;
        public InputAction @CC => m_Wrapper.m_Debug_CC;
        public InputAction @Inc => m_Wrapper.m_Debug_Inc;
        public InputAction @Dec => m_Wrapper.m_Debug_Dec;
        public InputAction @Max => m_Wrapper.m_Debug_Max;
        public InputAction @Reset => m_Wrapper.m_Debug_Reset;
        public InputAction @DebugSwitcher => m_Wrapper.m_Debug_DebugSwitcher;
        public InputAction @Save => m_Wrapper.m_Debug_Save;
        public InputAction @Load => m_Wrapper.m_Debug_Load;
        public InputAction @Quit => m_Wrapper.m_Debug_Quit;
        public InputActionMap Get() { return m_Wrapper.m_Debug; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DebugActions set) { return set.Get(); }
        public void SetCallbacks(IDebugActions instance)
        {
            if (m_Wrapper.m_DebugActionsCallbackInterface != null)
            {
                @IsDebug.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnIsDebug;
                @IsDebug.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnIsDebug;
                @IsDebug.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnIsDebug;
                @Health.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnHealth;
                @Health.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnHealth;
                @Health.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnHealth;
                @Armor.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnArmor;
                @Armor.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnArmor;
                @Armor.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnArmor;
                @SL.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnSL;
                @SL.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnSL;
                @SL.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnSL;
                @CC.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnCC;
                @CC.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnCC;
                @CC.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnCC;
                @Inc.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnInc;
                @Inc.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnInc;
                @Inc.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnInc;
                @Dec.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnDec;
                @Dec.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnDec;
                @Dec.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnDec;
                @Max.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnMax;
                @Max.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnMax;
                @Max.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnMax;
                @Reset.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnReset;
                @Reset.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnReset;
                @Reset.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnReset;
                @DebugSwitcher.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnDebugSwitcher;
                @DebugSwitcher.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnDebugSwitcher;
                @DebugSwitcher.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnDebugSwitcher;
                @Save.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnSave;
                @Save.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnSave;
                @Save.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnSave;
                @Load.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnLoad;
                @Load.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnLoad;
                @Load.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnLoad;
                @Quit.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnQuit;
                @Quit.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnQuit;
                @Quit.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnQuit;
            }
            m_Wrapper.m_DebugActionsCallbackInterface = instance;
            if (instance != null)
            {
                @IsDebug.started += instance.OnIsDebug;
                @IsDebug.performed += instance.OnIsDebug;
                @IsDebug.canceled += instance.OnIsDebug;
                @Health.started += instance.OnHealth;
                @Health.performed += instance.OnHealth;
                @Health.canceled += instance.OnHealth;
                @Armor.started += instance.OnArmor;
                @Armor.performed += instance.OnArmor;
                @Armor.canceled += instance.OnArmor;
                @SL.started += instance.OnSL;
                @SL.performed += instance.OnSL;
                @SL.canceled += instance.OnSL;
                @CC.started += instance.OnCC;
                @CC.performed += instance.OnCC;
                @CC.canceled += instance.OnCC;
                @Inc.started += instance.OnInc;
                @Inc.performed += instance.OnInc;
                @Inc.canceled += instance.OnInc;
                @Dec.started += instance.OnDec;
                @Dec.performed += instance.OnDec;
                @Dec.canceled += instance.OnDec;
                @Max.started += instance.OnMax;
                @Max.performed += instance.OnMax;
                @Max.canceled += instance.OnMax;
                @Reset.started += instance.OnReset;
                @Reset.performed += instance.OnReset;
                @Reset.canceled += instance.OnReset;
                @DebugSwitcher.started += instance.OnDebugSwitcher;
                @DebugSwitcher.performed += instance.OnDebugSwitcher;
                @DebugSwitcher.canceled += instance.OnDebugSwitcher;
                @Save.started += instance.OnSave;
                @Save.performed += instance.OnSave;
                @Save.canceled += instance.OnSave;
                @Load.started += instance.OnLoad;
                @Load.performed += instance.OnLoad;
                @Load.canceled += instance.OnLoad;
                @Quit.started += instance.OnQuit;
                @Quit.performed += instance.OnQuit;
                @Quit.canceled += instance.OnQuit;
            }
        }
    }
    public DebugActions @Debug => new DebugActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Back;
    private readonly InputAction m_UI_Close;
    public struct UIActions
    {
        private @PlayerInput m_Wrapper;
        public UIActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Back => m_Wrapper.m_UI_Back;
        public InputAction @Close => m_Wrapper.m_UI_Close;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Back.started -= m_Wrapper.m_UIActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnBack;
                @Close.started -= m_Wrapper.m_UIActionsCallbackInterface.OnClose;
                @Close.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnClose;
                @Close.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnClose;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @Close.started += instance.OnClose;
                @Close.performed += instance.OnClose;
                @Close.canceled += instance.OnClose;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface ICharacterControlsActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
    }
    public interface IDebugActions
    {
        void OnIsDebug(InputAction.CallbackContext context);
        void OnHealth(InputAction.CallbackContext context);
        void OnArmor(InputAction.CallbackContext context);
        void OnSL(InputAction.CallbackContext context);
        void OnCC(InputAction.CallbackContext context);
        void OnInc(InputAction.CallbackContext context);
        void OnDec(InputAction.CallbackContext context);
        void OnMax(InputAction.CallbackContext context);
        void OnReset(InputAction.CallbackContext context);
        void OnDebugSwitcher(InputAction.CallbackContext context);
        void OnSave(InputAction.CallbackContext context);
        void OnLoad(InputAction.CallbackContext context);
        void OnQuit(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnBack(InputAction.CallbackContext context);
        void OnClose(InputAction.CallbackContext context);
    }
}
